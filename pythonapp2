#!/usr/bin/env python

from flask import Flask, request, render_template, session, url_for, redirect, make_response
import myredis
import elastics

# create my flask application
app = Flask(__name__)
# setiing the secret key
app.secret_key = 'rohitjoseph0808@gmail.com'
def get_id():  # from cookie
    return "admin3"
    if(request.cookies.has_key("name")):
        return request.cookies.get("name")
    else :
        return ""
@app.route("/login", methods=['GET', 'POST'])
@app.route("/", methods=['GET', 'POST'])
def login():#login page
    if request.method == 'GET':
        msg = False
        return render_template('login.html', message=msg)

    else:

        u = request.form['username']
        p = request.form['password']

        if u == 'admin3' and p == 'admin':
            response = make_response(redirect('/query'))
            response.set_cookie('name', u)
            return response

        else:
            msg = True
            return render_template('login.html', message=msg)

# Insert the GET parameters
@app.route('/insert', methods=['GET']) #insert page
def default():
    params = request.args.items()
    print params
    userName = get_id()
    if(userName==""):
        return make_response(redirect('/login'))

    # testing for correct input from client side
    for cur in params:
        if cur[0] == "" or cur[1] == "":
            return render_template('400.html')

    # insert in redis set
    myredis.add_list(userName, params)

    #insert in elasticsearch
    if elastics.insert(userName,params)==True:
        return render_template('register.html')
    else:
        return render_template('500.html')


# query GET
@app.route('/query', methods=['GET','DELETE'])
def query_page():

    params = request.args.items()
    params.sort()
    userName = get_id()
    if(userName==""):
        return make_response(redirect('/login'))


    if(len(params)==0):
        finalFields = myredis.get_redis(get_id())
        print finalFields
        return render_template('newtab.html', fields=finalFields)
    else:
        return elastics.query(userName,params)


if __name__ == '__main__':
    app.run(host='10.5.16.75', port=5000, debug=True, use_reloader=True)
